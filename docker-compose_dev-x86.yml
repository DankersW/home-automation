version: "3.9"
services:

  # ###########
  # INFRA
  # ###########
  mqtt_mosquitto_broker:
    image: toke/mosquitto:release-1.4.10-2
    hostname: mqtt_mosquitto_broker
    container_name: mqtt_mosquitto_broker
    restart: always
    expose:
      - "1883"
    ports:
      - "1883:1883"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo:
    image: mongo:4.4.2-bionic
    hostname: mongo
    container_name: mongo
    restart: always
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u admin -p mongo_admin_iot --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - "27017-27019:27017-27019"
    environment:
      MONGO_INITDB_DATABASE: "iot_db"
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "mongo_admin_iot"
    volumes:
      - ./docker/MongoDb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - ./mongo-volume:/data/db

  # ###########
  # TOOLS
  # ###########
  mongo-express:
    image: mongo-express:0.54.0
    hostname: mongo-express
    container_name: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_admin_iot

  zoo-navigator:
    image: elkozmon/zoonavigator:1.1.1
    container_name: zoonavigator
    ports:
      - "9000:9000"
    environment:
      HTTP_PORT: 9000
      AUTO_CONNECT_CONNECTION_STRING: zookeeper:2181

  # ###########
  # SERVICES
  # ###########
  home-automation-framework:
    image: dankersw/home_automation_framework:1.2.1
    hostname: framework
    container_name: framework
    restart: always
    depends_on:
      - mongo
      - mqtt_mosquitto_broker

  backend:
    image: dankersw/home-automation-backend:2.0.5
    hostname: backend
    container_name: backend
    restart: always
    expose:
      - "4000"
    ports:
      - "4000:4000"
    depends_on:
      - mongo
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: dankersw/home-automation-frontend:1.2.0
    hostname: frontend
    container_name: frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend  

  dobby:
    image: dankersw/dobby:0.1.1
    hostname: dobby
    container_name: dobby
    restart: always
    devices:
      - /dev/ttyACM0:/dev/ttyACM0


volumes:
  mongo-volume:
